<?php

namespace Laraditz\MyInvois\Enums;

enum Country: string
{
    case Aruba = 'ABW';
    case Afghanistan = 'AFG';
    case Angola = 'AGO';
    case Anguilla = 'AIA';
    case AlandIslands = 'ALA';
    case Albania = 'ALB';
    case Andora = 'AND';
    case NetherlandsAntilles = 'ANT';
    case UnitedArabEmirates = 'ARE';
    case Argentina = 'ARG';
    case Armenia = 'ARM';
    case AmericanSamoa = 'ASM';
    case Antarctica = 'ATA';
    case FrenchSouthernTerritories = 'ATF';
    case AntiguaAndBarbuda = 'ATG';
    case Australia = 'AUS';
    case Austria = 'AUT';
    case Azerbaidjan = 'AZE';
    case Burundi = 'BDI';
    case Belgium = 'BEL';
    case Benin = 'BEN';
    case BonaireSintEustatiusAndSaba = 'BES';
    case BurkinaFaso = 'BFA';
    case Bangladesh = 'BGD';
    case Bulgaria = 'BGR';
    case Bahrain = 'BHR';
    case Bahamas = 'BHS';
    case BosniaAndHerzegovina = 'BIH';
    case SaintBarthelemy = 'BLM';
    case Belarus = 'BLR';
    case Belize = 'BLZ';
    case Bermuda = 'BMU';
    case Bolivia = 'BOL';
    case Brazil = 'BRA';
    case Barbados = 'BRB';
    case Brunei = 'BRN';
    case Bhutan = 'BTN';
    case BouvetIsland = 'BVT';
    case Botswana = 'BWA';
    case CentralAfricanRepublic = 'CAF';
    case Canada = 'CAN';
    case CocosIsland = 'CCK';
    case Switzerland = 'CHE';
    case Chile = 'CHL';
    case China = 'CHN';
    case CoteDIvoire = 'CIV';
    case Cameroon = 'CMR';
    case CongoTheDemocraticRepublic = 'COD';
    case Congo = 'COG';
    case CookIslands = 'COK';
    case Colombia = 'COL';
    case Comoros = 'COM';
    case CaboVerde = 'CPV';
    case CostaRica = 'CRI';
    case Crimea = 'CRM';
    case Cuba = 'CUB';
    case Curacao = 'CUW';
    case ChristmasIslands = 'CXR';
    case CaymanIslands = 'CYM';
    case Cyprus = 'CYP';
    case CzechRepublic = 'CZE';
    case Germany = 'DEU';
    case Djibouti = 'DJI';
    case Dominica = 'DMA';
    case Denmark = 'DNK';
    case DominicanRepublic = 'DOM';
    case Algeria = 'DZA';
    case Ecuador = 'ECU';
    case Egypt = 'EGY';
    case Eritrea = 'ERI';
    case WesternSahara = 'ESH';
    case Spain = 'ESP';
    case Estonia = 'EST';
    case Ethiopia = 'ETH';
    case Finland = 'FIN';
    case Fiji = 'FJI';
    case FalklandIslands = 'FLK';
    case France = 'FRA';
    case FaeroeIslands = 'FRO';
    case Micronesia = 'FSM';
    case Gabon = 'GAB';
    case UnitedKingdom = 'GBR';
    case Georgia = 'GEO';
    case Guernsey = 'GGY';
    case Ghana = 'GHA';
    case Gibraltar = 'GIB';
    case Guinea = 'GIN';
    case Guadeloupe = 'GLP';
    case Gambia = 'GMB';
    case GuineaBissau = 'GNB';
    case EquatorialGuinea = 'GNQ';
    case Greece = 'GRC';
    case Grenada = 'GRD';
    case Greenland = 'GRL';
    case Guatemala = 'GTM';
    case FrenchGuiana = 'GUF';
    case Guam = 'GUM';
    case Guyana = 'GUY';
    case HongKong = 'HKG';
    case HeardAndMcdonaldIslands = 'HMD';
    case Honduras = 'HND';
    case Croatia = 'HRV';
    case Haiti = 'HTI';
    case Hungary = 'HUN';
    case Indonesia = 'IDN';
    case Ireland = 'IRL';
    case Israel = 'ISR';
    case India = 'IND';
    case Iraq = 'IRQ';
    case Iran = 'IRN';
    case Iceland = 'ISL';
    case Italy = 'ITA';
    case Jamaica = 'JAM';
    case Jersey = 'JEY';
    case Jordan = 'JOR';
    case Japan = 'JPN';
    case Kazakhstan = 'KAZ';
    case Kenya = 'KEN';
    case Kyrgyzstan = 'KGZ';
    case Cambodia = 'KHM';
    case Kiribati = 'KIR';
    case SaintKittsAndNevis = 'KNA';
    case Korea = 'KOR';
    case Kuwait = 'KWT';
    case LaoPeoplesDemocraticRepublic = 'LAO';
    case Lebanon = 'LBN';
    case Liberia = 'LBR';
    case Libya = 'LBY';
    case SaintLucia = 'LCA';
    case Liechtenstein = 'LIE';
    case SriLanka = 'LKA';
    case Lesotho = 'LSO';
    case Lithuania = 'LTU';
    case Luxembourg = 'LUX';
    case Latvia = 'LVA';
    case Macao = 'MAC';
    case SaintMartin = 'MAF';
    case Morocco = 'MAR';
    case Monaco = 'MCO';
    case Moldova = 'MDA';
    case Madagascar = 'MDG';
    case Maldives = 'MDV';
    case Mexico = 'MEX';
    case MarshallIslands = 'MHL';
    case Macedonia = 'MKD';
    case Mali = 'MLI';
    case Malta = 'MLT';
    case Myanmar = 'MMR';
    case Montenegro = 'MNE';
    case Mongolia = 'MNG';
    case NorthernMarianaIslands = 'MNP';
    case Mozambique = 'MOZ';
    case Mauritania = 'MRT';
    case Montserrat = 'MSR';
    case Martinique = 'MTQ';
    case Mauritius = 'MUS';
    case Malawi = 'MWI';
    case Malaysia = 'MYS';
    case Mayotte = 'MYT';
    case Namibia = 'NAM';
    case NewCaledonia = 'NCL';
    case Niger = 'NER';
    case NorfolkIsland = 'NFK';
    case Nigeria = 'NGA';
    case Nicaragua = 'NIC';
    case Niue = 'NIU';
    case Netherlands = 'NLD';
    case Norway = 'NOR';
    case Nepal = 'NPL';
    case Nauru = 'NRU';
    case NewZealand = 'NZL';
    case Oman = 'OMN';
    case Pakistan = 'PAK';
    case Panama = 'PAN';
    case Pitcairn = 'PCN';
    case Peru = 'PER';
    case Philippines = 'PHL';
    case Palau = 'PLW';
    case PapuaNewGuinea = 'PNG';
    case Poland = 'POL';
    case PuertoRico = 'PRI';
    case DPRKorea = 'PRK';
    case Portugal = 'PRT';
    case Paraguay = 'PRY';
    case Palestine = 'PSE';
    case FrenchPolynesia = 'PYF';
    case Qatar = 'QAT';
    case Reunion = 'REU';
    case Romania = 'ROU';
    case Russia = 'RUS';
    case Rwanda = 'RWA';
    case SaudiArabia = 'SAU';
    case Scotland = 'SCT';
    case Sudan = 'SDN';
    case Senegal = 'SEN';
    case Singapore = 'SGP';
    case SouthGeorgiaAndTheSouthSandwichIsland = 'SGS';
    case StHelena = 'SHN';
    case SvalbardAndJanMayenIslands = 'SJM';
    case SolomonIslands = 'SLB';
    case SierraLeone = 'SLE';
    case ElSalvador = 'SLV';
    case SanMarino = 'SMR';
    case Somalia = 'SOM';
    case StPierreAndMiquelon = 'SPM';
    case SerbiaMontenegro = 'SRB';
    case SouthSudan = 'SSD';
    case SaoTomeAndPrincipe = 'STP';
    case Suriname = 'SUR';
    case SlovakRepublic = 'SVK';
    case Slovenia = 'SVN';
    case Sweden = 'SWE';
    case Eswatini = 'SWZ';
    case SintMaarten = 'SXM';
    case Seychelles = 'SYC';
    case SyrianArabRepublic = 'SYR';
    case TurksAndCaicosIslands = 'TCA';
    case Chad = 'TCD';
    case Togo = 'TGO';
    case Thailand = 'THA';
    case Tajikistan = 'TJK';
    case Tokelau = 'TKL';
    case Turkmenistan = 'TKM';
    case TimorLeste = 'TLS';
    case Tonga = 'TON';
    case TrinidadAndTobago = 'TTO';
    case Tunisia = 'TUN';
    case Turkiye = 'TUR';
    case Tuvalu = 'TUV';
    case Taiwan = 'TWN';
    case TanzaniaUnitedRepublic = 'TZA';
    case Uganda = 'UGA';
    case Ukraine = 'UKR';
    case UnitedStatesMinorOutlyingIslands = 'UMI';
    case Uruguay = 'URY';
    case UnitedStatesOfAmerica = 'USA';
    case Uzbekistan = 'UZB';
    case VaticanCity = 'VAT';
    case SaintVincentAndGrenadines = 'VCT';
    case Venezuela = 'VEN';
    case VirginIslandsBritish = 'VGB';
    case VirginIslandsUs = 'VIR';
    case Vietnam = 'VNM';
    case Vanuatu = 'VUT';
    case WallisAndFutunaIslands = 'WLF';
    case Samoa = 'WSM';
    case Kosovo = 'XKX';
    case Yemen = 'YEM';
    case SouthAfrica = 'ZAF';
    case Zambia = 'ZMB';
    case Zimbabwe = 'ZWE';

    public function getName(): ?string
    {
        return match ($this) {
            static::BonaireSintEustatiusAndSaba => 'Bonaire, Sint Eustatius and Saba',
            static::Brunei => 'Brunei Darussalam',
            static::CongoTheDemocraticRepublic => 'Congo, The Democratic Republic',
            static::FalklandIslands => 'Falkland Islands (Malvinas)',
            static::Micronesia => 'Micronesia, Federated States of',
            static::GuineaBissau => 'Guinea-Bissau',
            static::Jersey => 'Jersey (Channel Islands)',
            static::Korea => 'The Republic of Korea',
            static::Libya => 'Libyan Arab Jamahiriya',
            static::SaintMartin => 'Saint Martin (French Part)',
            static::Moldova => 'Moldova, Republic of',
            static::Macedonia => 'Macedonia, The Former Yugoslav Republic of',
            static::DPRKorea => 'Democratic People\'s Republic of Korea',
            static::Palestine => 'Palestinian Territory, Occupied',
            static::Russia => 'Russian Federation (USSR)',
            static::Eswatini => 'Eswatini, Kingdom of Swaziland',
            static::VaticanCity => 'Vatican City State (Holy See)',
            static::VirginIslandsBritish => 'Virgin Islands (British)',
            static::VirginIslandsUs => 'Virgin Islands (US)',
            default => str($this->name)->headline()->value,
        };
    }

    public static function __callStatic($method, $arguments)
    {
        try {
            return static::{$method}?->value;
        } catch (\Throwable $th) {
            throw $th;
        }
    }
}
